#define SFALL_SC_EVALUATION   (true)  // short - circuit evaluation

#include "E:\Fallout Tools Pack\sFall_Script_Editor\scripts\HEADERS\sfall.h"
#include "E:\Fallout Tools Pack\sFall_Script_Editor\scripts\HEADERS\DEFINE.H"
#include "E:\Fallout Tools Pack\sFall_Script_Editor\scripts\HEADERS\define_extra.h"
#include "E:\Fallout Tools Pack\sFall_Script_Editor\scripts\HEADERS\lib.math.h"
#include "E:\Fallout Tools Pack\sFall_Script_Editor\scripts\HEADERS\COMMAND.H"


variable steal_count;
variable right_hand_item;
variable right_hand_item_target;
variable wpn_is_stolen;

procedure start;
procedure steal_handler;
procedure steal_skill_use;
procedure game_mode;
procedure rollCheck;

procedure start begin
   if (game_loaded) then begin
   register_hook_proc_spec(HOOK_STEAL, steal_handler);
   register_hook_proc(HOOK_GAMEMODECHANGE, game_mode);
   register_hook_proc_spec(HOOK_USESKILL, steal_skill_use);
   register_hook_proc_spec(HOOK_ROLLCHECK, rollCheck);
   set_global_script_type(1);
   set_global_script_repeat(0);
   end
end

procedure rollCheck begin
   variable roll_type = get_sfall_arg;
   variable roll_result = get_sfall_arg;
   variable roll_chance = get_game_mode;
   variable roll_bonus = get_sfall_arg;
   variable rnd_chahce = get_game_mode;
   if roll_type == 7 then begin
      set_sfall_return(-1000);
   end
end

procedure game_mode begin
   variable game_exit = get_sfall_arg; //int     arg0 - event type: 1 - when the player exits the game, 0 - otherwise
   variable lastgamemode = get_sfall_arg; //  int     arg1 - the previous game mode
   //target equips the weapon if it hasn't been stolen
   if wpn_is_stolen == 2 andAlso lastgamemode == INTFACELOOT then begin
      wield_obj_critter(right_hand_item_target, right_hand_item);
      wpn_is_stolen = 0;
   end
end

procedure steal_handler begin
   variable thief = get_sfall_arg; //Sneak check result: 1 - success, 0 - failure
   variable target = get_sfall_arg; //  the duration in ticks for the current Sneak check (time depends on Sneak skill level)
   variable item = get_sfall_arg; // Item being stolen/planted
   variable stype = get_sfall_arg; // 0 when stealing, 1 when planting
   //int     ret0 - overrides hard-coded handler (1 - force success, 0 - force fail, -1 - use engine handler)
   variable user_steal_skill = has_skill(thief, SKILL_STEAL);
   variable target_steal_skill = has_skill(target, SKILL_STEAL);
   variable user_sneak_skill = has_skill(thief, SKILL_SNEAK);
   variable user_steal_skill_mult = 1.55000;
   variable tar_pid = obj_pid(target);
   variable item_pid = obj_pid(item);
   variable target_pe = get_critter_stat(target,STAT_pe);
   variable target_base_pe = get_critter_base_stat(target,STAT_pe);
   variable target_min_pe = 0;
   variable target_pe_mult = 7;
   variable item_size = 0;
   variable item_weight_lvar = 0;
   variable rnd = 0;
   variable chance_to_steal = 0;
   variable steal_bonus = 0;
   variable pickpocket = has_trait(TRAIT_PERK, dude_obj, PERK_pickpocket);
   variable night_vision = has_trait(TRAIT_PERK, dude_obj, PERK_night_vision );
   variable harmless = has_trait(TRAIT_PERK, dude_obj, PERK_harmless_perk );
   variable light_level = get_light_level;
   variable target_rot := has_trait(TRAIT_OBJECT, target, OBJECT_CUR_ROT);
   variable target_rot_to_tar := rotation_to_tile(tile_num(target), tile_num(dude_obj));
   variable team := has_trait(TRAIT_OBJECT, target, OBJECT_TEAM_NUM);
   variable ally = 0;
   variable ally_team = 0;
   variable ally_pe = 0;
   variable max_steal_chance = 0;
   variable isSuccess = 0;
   // PERK_pickpocket check for add|remove item size and weight penalty
   if pickpocket < 1 then begin
   item_size = get_proto_data(item_pid, PROTO_IT_SIZE);
   item_weight_lvar = item_weight(item);
   end
   // Stealing weapons from hand.
   if item == right_hand_item andAlso stype == 0 then begin
      right_hand_item_target = target;
      wpn_is_stolen = 1;
      // Penalty for stealing weapons from hand.
      steal_bonus = steal_bonus - 30 - (2 * item_size) - (2 * item_weight_lvar);
   end
   if item == right_hand_item andAlso stype == 1 then begin
      right_hand_item_target = target;
      wpn_is_stolen = 2;
   end
   //pe in formula cannot be lower then base_pe - base_pe / 3
   target_min_pe = target_base_pe - round(target_base_pe / 3.00000);
   if target_pe < target_min_pe then begin
      target_pe = target_min_pe;
   end
   // stealing penalty if target's allies can see the thief
   foreach ally in list_as_array(LIST_CRITTERS) begin
      if obj_can_see_obj(ally,dude_obj) then begin
         ally_team := has_trait(TRAIT_OBJECT, ally, OBJECT_TEAM_NUM);
         if ally_team == team then begin
         ally_pe = get_critter_stat(ally,STAT_pe);
         target_pe = target_pe + ally_pe;
         end
      end
   end
   // stealing penalty if target facing the thief
   if target_rot == target_rot_to_tar  then begin
      steal_bonus = steal_bonus - 30;
   end
   // Penalty for theft if the target is sideways to the thief
   if target_rot == (target_rot_to_tar + 1)%6 or target_rot == (target_rot_to_tar + 5)%6 then begin
      steal_bonus = steal_bonus - 20;
   end
   //steal_bonus if critter can't see thief
   if not(obj_can_see_obj(target,dude_obj)) then begin
      steal_bonus = steal_bonus + 20;
   end
   // bonus if thief right behind target
   if target_rot == (target_rot_to_tar + 3)%6 then begin
      steal_bonus = steal_bonus + 5;
   end
   // bonus if target is prone or blind
   if (critter_state(target) BWAND DAM_BLIND) or (critter_state(target) bwand CRITTER_IS_PRONE) then begin
      steal_bonus = steal_bonus + 15;
   end
   // bonus if target is ko
   if (critter_state(target) BWAND DAM_KNOCKED_DOWN) or (critter_state(target) BWAND DAM_KNOCKED_OUT) then begin
      steal_bonus = steal_bonus + 25;
   end
   // 15-29% penalty to target pe if light lower 50%(or 70% if has night_vision)
   if light_level < 41216 + (night_vision * 21504) then begin
      target_pe_mult = (light_level - (night_vision * 14336)) / 6000;
      if target_pe_mult < 5 then begin
         target_pe_mult = 5;
      end
   end
   // bonus for sneak_success
   if sneak_success == 1 then begin
      steal_bonus = steal_bonus + user_sneak_skill / 10;
   end
   // a little bonus for not sneak_success
   if sneak_success == 0 then begin
      steal_bonus = steal_bonus + 5;
   end
   rnd = random(1, 100);
   // force SUCCESS on party members
   if team == TEAM_PLAYER then begin
      rnd = -1;
   end
   //chance_to_steal formula
   chance_to_steal = 40 - steal_count + steal_bonus + (user_steal_skill_mult * user_steal_skill) - ((item_size + 1) * 4) - (item_weight_lvar * 1.50000) - (target_pe * target_pe_mult);

   //max pickpocket chance is equal to skill and gains a bonus to max pickpocket chance if skill is high enough
   //maximum steal chance from 95 (+1% for every 10 skills above 150) to 99 (steal >= 190)
   max_steal_chance = (user_steal_skill - 140) / 10;
      if max_steal_chance > 4 then begin
      max_steal_chance = 4;
      end
   if chance_to_steal > 95 + max_steal_chance then begin
      chance_to_steal = 95 + max_steal_chance;
   end
   //steal chance gradations
   if chance_to_steal > 9 andAlso chance_to_steal < 25 then begin
      chance_to_steal = 25;
   end
   if chance_to_steal > 25 andAlso chance_to_steal < 50 then begin
      chance_to_steal = 50;
   end
   //an attempt to prevent savescams if the chances are too low :)
   if chance_to_steal < 10 then begin
      chance_to_steal = 0;
   end
   //display_msg("max_steal_chance=" + max_steal_chance);
   display_msg("chance_to_steal=" + chance_to_steal);
   display_msg("rnd=" + rnd);
   //Snsuccessful attempt
   if chance_to_steal < rnd then begin
      set_sfall_return(0);
      steal_count = 0;
      //if harmless > 0 then begin
         //unimplemented
      //end
   end
   //Ûuccessful attempt
   if chance_to_steal >= rnd then begin
      set_sfall_return(1);
      //penalty for stealing multiple things in a row
      steal_count += 1 + item_weight_lvar;
      // for msg
      isSuccess = 1;
   end
   if team != TEAM_PLAYER then begin
      display_msg(sprintf(mstr_skill(570 + (isSuccess != false) + stype * 2), obj_name(item)));
      if chance_to_steal < 10 then begin
         if stype == 0 then begin
            display_msg("With your skills you can never steal " + obj_name(item) + ".");
         end
         if stype == 1 then begin
            display_msg("With your skills you can never plant " + obj_name(item) + ".");
         end
      end
   end
end

procedure steal_skill_use begin
   variable user = get_sfall_arg;
   variable target = get_sfall_arg;
   variable skill = get_sfall_arg;
   variable skill_bonus = get_sfall_arg;
   variable user_steal_skill = has_skill(user, SKILL_STEAL);
   variable tar_pid = obj_pid(target);
   variable target_pe = get_critter_stat(target,STAT_pe);
   variable target_base_pe = get_critter_base_stat(target,STAT_pe);
   variable target_pe_mult = 7;
   variable target_min_pe = 0;
   variable min_steal_skill = 0;
   variable critter_type = metarule(METARULE_CRITTER_KILL_TYPE, target); // men = 0, women = 1, children = 2, super mutants = 3, ghouls = 4
   variable target_steal_skill = has_skill(target, SKILL_STEAL);
   variable user_sneak_skill = has_skill(user, SKILL_SNEAK);
   variable pickpocket = has_trait(TRAIT_PERK, dude_obj, PERK_pickpocket);
   variable night_vision = has_trait(TRAIT_PERK, dude_obj, PERK_night_vision );
   variable harmless = has_trait(TRAIT_PERK, dude_obj, PERK_harmless_perk );
   variable light_level = get_light_level;
   variable target_rot := has_trait(TRAIT_OBJECT, target, OBJECT_CUR_ROT);
   variable target_rot_to_tar := rotation_to_tile(tile_num(target), tile_num(dude_obj));
   variable team := has_trait(TRAIT_OBJECT, target, OBJECT_TEAM_NUM);
   variable ally = 0;
   variable ally_team = 0;
   variable ally_pe = 0;
   variable tar_fid = obj_art_fid(target);
   variable tar_int = get_critter_stat(target, STAT_iq);
   variable ally_can_see = 0;
   variable rnd = 0;
   //calculating the minimum skill to get into the target's pocket
   if  skill == SKILL_STEAL andAlso critter_type < 5 andAlso not(team == TEAM_PLAYER) then begin
   steal_count = 0;
      //the ability to steal weapons from hands if the skill is high enough
      if user_steal_skill > 175 + target_pe * 5 then begin
      right_hand_item = critter_inven_obj2(target, INVEN_TYPE_RIGHT_HAND);
      right_hand_item_target = target;
      inven_unwield(target);
      wpn_is_stolen = 2;
      end
      // 15-29% penalty to target pe if light lower 50%(or 70% if has night_vision)
      if light_level < 41216 + (night_vision * 21504) then begin
         target_pe_mult = (light_level - (night_vision * 14336)) / 6000;
         if target_pe_mult < 5 then begin
            target_pe_mult = 5;
         end
      end
      //pe in formula cannot be lower then base_pe - base_pe / 3
      target_min_pe = target_base_pe - round(target_base_pe / 3.00000);
      if target_pe < target_min_pe then begin
         target_pe = target_min_pe;
      end
      //penalty to target pe if light lower 50%(or 70% if has night_vision)
      foreach ally in list_as_array(LIST_CRITTERS) begin
         if ally != target andAlso obj_can_see_obj(ally,dude_obj) then begin
            ally_team := has_trait(TRAIT_OBJECT, ally, OBJECT_TEAM_NUM);
            if ally_team == team then begin
            ally_pe = get_critter_stat(ally,STAT_pe);
            target_pe = target_pe + ally_pe;
            ally_can_see += 1;
            end
         end
      end
      min_steal_skill = (5 + (target_pe * target_pe_mult));
      // stealing penalty if target facing the thief
      if target_rot == target_rot_to_tar  then begin
         min_steal_skill = min_steal_skill + 15;
      end
      if target_rot == (target_rot_to_tar + 1)%6 or target_rot == (target_rot_to_tar + 5)%6 then begin
         min_steal_skill = min_steal_skill + 10;
      end
      // stealing penalty if target facing the thief
      if (critter_state(target) BWAND DAM_KNOCKED_DOWN) or (critter_state(target) BWAND DAM_KNOCKED_OUT) or (critter_state(target) BWAND DAM_BLIND) or (critter_state(target) bwand CRITTER_IS_PRONE) then begin
         min_steal_skill = min_steal_skill - 20;
      end
      //minimum skill to open steal interface
      if  user_steal_skill < min_steal_skill then begin
         if ally_can_see != 0 then begin
            display_msg("Your pickpocketing attempt was noticed by target's allies.");
         end
         rnd = random(0, 4);
         if rnd > 1 andAlso not(combat_is_initialized) andAlso obj_can_see_obj(target,user) andAlso not(critter_state(target) BWAND DAM_KNOCKED_DOWN) andAlso not(critter_state(target) BWAND DAM_KNOCKED_OUT) then begin
            if tar_fid == FID_NACHLD or tar_fid == 16777336 then begin
               if rnd == 3 then begin
               float_msg(target, "?", FLOAT_MSG_YELLOW);
               end
               if rnd == 4 then begin
               float_msg(target, "!", FLOAT_MSG_RED);
               end
            end
            if tar_fid != FID_NACHLD andAlso tar_fid != 16777336 then begin
               if rnd > 1 andAlso rnd < 4 then begin
               float_msg(target, g_mstr(random(3054,3064)), FLOAT_COLOR_BAD);
               end
               if rnd > 3 then begin
               float_msg(target, g_mstr(random(3050,3052)), FLOAT_COLOR_BAD);
               end
            end
      end
      if rnd == (0 - random(0, harmless)) then begin
         set_self(target);
         if tar_fid == FID_NACHLD or tar_fid == 16777336 then begin
            critter_set_flee_state(target, 1);
            set_self(0);
         end
         if tar_fid != FID_NACHLD andAlso tar_fid != 16777336 then begin
            attack(user);
            set_self(0);
         end
         set_self(0);
      end
      set_sfall_return(0);
      display_msg("You aren't skilled enough to pickpocket your target." + min_steal_skill);
      end
   end
end