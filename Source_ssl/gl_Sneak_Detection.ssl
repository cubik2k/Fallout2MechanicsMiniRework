#define SFALL_SC_EVALUATION   (true)  // short - circuit evaluation

#include "E:\Fallout Tools Pack\sFall_Script_Editor\scripts\HEADERS\sfall.h"
#include "E:\Fallout Tools Pack\sFall_Script_Editor\scripts\HEADERS\DEFINE.H"
#include "E:\Fallout Tools Pack\sFall_Script_Editor\scripts\HEADERS\define_extra.h"
#include "E:\Fallout Tools Pack\sFall_Script_Editor\scripts\HEADERS\command_lite.h"

variable SneakDetection;
variable SneakRework;
variable armor_penalty;
variable Critter = 0;
variable highlight_key = -1;
variable fo2tweaks_highlighting = 0;
variable min_perception_range_ini;

procedure start;
procedure sneak_check;
procedure sign_handler;

procedure start begin
   if game_loaded then begin
      SneakDetection = get_ini_setting ("mods\\F2MechanicsMiniRework.ini|Main|SneakDetection");
      SneakRework = get_ini_setting ("mods\\F2MechanicsMiniRework.ini|Main|SneakRework");
      armor_penalty = get_ini_setting ("mods\\F2MechanicsMiniRework.ini|Sneak|ArmorPenalty");
      min_perception_range_ini = get_ini_setting ("mods\\F2MechanicsMiniRework.ini|Sneak|MinDetectionRange");
      if SneakDetection != 0 or SneakRework != 0 then begin
         register_hook_proc(HOOK_WITHINPERCEPTION, sneak_check);
         register_hook_proc(HOOK_COMBATTURN, sign_handler);
         set_global_script_type(1);
         set_global_script_repeat(0);
         fo2tweaks_highlighting = get_ini_setting("mods\\fo2tweaks.ini|main|highlighting");
            if fo2tweaks_highlighting != 0 then begin
               highlight_key = get_ini_setting("mods\\fo2tweaks.ini|highlighting|key");
            end
      end
   end
end

procedure sneak_check begin
   variable watcher = get_sfall_arg; // Watcher object
   variable target = get_sfall_arg; //  Target object
   variable inrange = get_sfall_arg; // Result of vanilla function: 1 - within perception range, 0 - otherwise
   variable hktype = get_sfall_arg; //  1 - when being called from obj_can_see_obj script function
                                     //2 - when being called from obj_can_hear_obj script function (need to set ObjCanHearObjFix=1 in ddraw.ini)
                                     //3 - when AI determines whether it sees a potential target when selecting attack targets
                                     //0 - all other cases
   variable distance = 0;
   variable watcher_pe = get_critter_stat(watcher,STAT_pe);
   variable sneak = has_skill(dude_obj, SKILL_SNEAK);
   variable sneakbonus= has_skill(dude_obj, SKILL_SNEAK) / 121;
   variable watcher_rot = has_trait(TRAIT_OBJECT, watcher, OBJECT_CUR_ROT);
   variable watcher_rot_to_tar = rotation_to_tile(tile_num(watcher), tile_num(dude_obj));
   variable losblock = 0;
   variable losblock2 = 0;
   variable misc_flags = 0;
   variable perception_range = 0;
   variable stealthboy = 0;
   variable orig_dist = 0;
   variable ns_sneak_dist = 0;
   variable team = has_trait(TRAIT_OBJECT, watcher, OBJECT_TEAM_NUM);
   variable color = get_outline(watcher);
   variable new_SneakDetection = 0;
   variable player_state = critter_state(dude_obj);
   variable taget_state = critter_state(target);
   variable light_level = get_light_level;
   variable night_vision = has_trait(TRAIT_PERK, dude_obj, PERK_night_vision );
   variable target_pe_mult = 0;
   variable darkness_penalty = 0;
   variable sneak_div = 0;
   variable armor_weight = 0;
   variable min_perception_range = min_perception_range_ini;
   variable watcher_kill_type = critter_kill_type(watcher);
   distance_objs(distance, watcher, dude_obj);
   watcher_pe = get_critter_stat(watcher,STAT_pe);
   losblock = obj_blocking_line(dude_obj, tile_num(watcher), BLOCKING_TYPE_SHOOT);
   losblock2 = obj_blocking_line(dude_obj, tile_num(watcher), BLOCKING_TYPE_SIGHT);
   orig_dist = (watcher_pe * 5);
   if SneakDetection == 1 andAlso SneakRework != 1 andAlso distance <= orig_dist andAlso (losblock andAlso (watcher == losblock)  or  Not(losblock2) )  andAlso obj_on_screen(watcher) then begin
     if (get_flags(dude_obj) bwand FLAG_TRANSGLASS) then begin
         stealthboy = 1;
      end
      if sneakbonus > 1 then begin
         sneakbonus = 1;
      end
      if team != TEAM_PLAYER andAlso watcher_rot != (watcher_rot_to_tar + 3)%6 andAlso watcher_rot != (watcher_rot_to_tar + 2)%6 andAlso watcher_rot != (watcher_rot_to_tar + 4)%6 then begin
         orig_dist = (watcher_pe * 5);
         perception_range = (watcher_pe * 5);
         if get_flags(dude_obj) bwand FLAG_TRANSGLASS then begin
            perception_range = perception_range / 2;
         end
         if using_skill(dude_obj,SKILL_SNEAK) then begin
            ns_sneak_dist = ((2 * perception_range) / 3);
            if sneak_success then begin
               perception_range = ((perception_range / 4) - sneakbonus);
            end
            else begin
               perception_range = ((2 * perception_range) / 3);
            end
         end
      end
      if team != TEAM_PLAYER andAlso ( watcher_rot == (watcher_rot_to_tar + 3)%6 or watcher_rot == (watcher_rot_to_tar + 2)%6 or watcher_rot == (watcher_rot_to_tar + 4)%6 ) then begin
         if combat_is_initialized then begin
            orig_dist = watcher_pe * 2;
            perception_range = watcher_pe * 2;
         end
         if not(combat_is_initialized) then begin
            orig_dist = watcher_pe;
            perception_range = watcher_pe;
         end
         if using_skill(dude_obj,SKILL_SNEAK) then begin
            ns_sneak_dist = ((2 * perception_range) / 3);
            if sneak_success then begin
               perception_range = ((perception_range / 4) - sneakbonus);
            end
            else begin
               perception_range = ((2 * perception_range) / 3);
            end
         end
      end
      // outline for original sneak formula
      if SneakDetection == 1 andAlso SneakRework != 1 andAlso using_skill(dude_obj,SKILL_SNEAK) then begin
         if  distance < orig_dist andAlso team != TEAM_PLAYER andAlso distance >= ns_sneak_dist andAlso distance >= perception_range  then begin
            if sneak_success andAlso color != OUTLINE_GREEN_GLOW then begin
               set_outline(watcher, OUTLINE_GREEN_GLOW);
            end
            if not(sneak_success) andAlso color != OUTLINE_YELLOW then begin
               set_outline(watcher, OUTLINE_YELLOW);
            end
         end
         if distance < orig_dist andAlso team != TEAM_PLAYER andAlso distance < ns_sneak_dist andAlso distance >= perception_range andAlso color != OUTLINE_YELLOW then begin
         set_outline(watcher, OUTLINE_YELLOW);
         end
         if distance < perception_range andAlso team != TEAM_PLAYER andAlso color != OUTLINE_RED then begin
         set_outline(watcher, OUTLINE_RED);
         end
      end
   end
   // new sneak mechanics
   if target == dude_obj andAlso SneakRework == 1 then begin
         // 15-29% penalty to target pe if light lower 50%(or 70% if has night_vision)
      if light_level < 41216 + (night_vision * 21504) andAlso watcher_kill_type != KILL_TYPE_alien_kills andAlso watcher_kill_type != KILL_TYPE_robot_kills andAlso watcher_kill_type != KILL_TYPE_floater_kills then begin
         darkness_penalty = (light_level - (night_vision * 14336)) / 6000;
         target_pe_mult = -(7 / (darkness_penalty - 1)) / 3.50000; // -2 if 0 light, -0,4 if 50% light
      end
   // darkness_penalty = from  2 (0 light)) to 6 (50% light - basement)

      if  watcher != dude_obj andAlso team != TEAM_PLAYER then begin
         target_pe_mult = target_pe_mult + 5;
         //facing
         if watcher_rot == watcher_rot_to_tar then begin
            orig_dist = (watcher_pe * target_pe_mult);
            perception_range = watcher_pe * target_pe_mult;
            if combat_is_initialized then begin
               perception_range = 1.2 * perception_range;
               orig_dist = 1.2 * orig_dist;
            end
         end
         //from sides
         if watcher_rot == (watcher_rot_to_tar+1)%6 or watcher_rot == (watcher_rot_to_tar+5)%6 then begin
            orig_dist = (watcher_pe * target_pe_mult);
            perception_range = watcher_pe * target_pe_mult;
            if combat_is_initialized then begin
               perception_range = 1.2 * perception_range;
               orig_dist = 1.2 * orig_dist;
            end
         end
         //from rears
         if watcher_rot == (watcher_rot_to_tar+2)%6 or watcher_rot == (watcher_rot_to_tar+4)%6 then begin
            orig_dist = watcher_pe;
            perception_range = watcher_pe;
            if combat_is_initialized then begin
               perception_range = 2 * watcher_pe;
               orig_dist = 2 * watcher_pe;
            end
         end
         // from back
         if watcher_rot == (watcher_rot_to_tar+3)%6 then begin
            orig_dist = watcher_pe;
            perception_range = watcher_pe;
            if combat_is_initialized then begin
               perception_range = 2 * watcher_pe;
               orig_dist = 2 * watcher_pe;
            end
         end
      end
            debug_msg("orig_perception_range=" + orig_dist + " New_perception_range=" + perception_range);
            //if stealthboy active
         if get_flags(dude_obj) bwand FLAG_TRANSGLASS then begin
            if watcher_rot != (watcher_rot_to_tar + 3)%6 andAlso watcher_rot != (watcher_rot_to_tar + 2)%6 andAlso watcher_rot != (watcher_rot_to_tar + 4)%6 then begin
               perception_range = round(perception_range / 2);
               min_perception_range = min_perception_range / 2;
            end
         end
      //new sneak formula
      if using_skill(dude_obj,SKILL_SNEAK) then begin
         if armor_penalty != 0 then begin
            armor_weight = (get_proto_data(obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)),PROTO_IT_WEIGHT) * 2 / 3) - 5;
         end
         if sneak < 0 then begin
            sneak = 0;
         end
         perception_range = round((perception_range * (100.00000 - ((sneak - 5 - armor_weight) / 1.85000))) / 100.00000) - (sneak / 60);
      end
         //minimal range
      if perception_range < min_perception_range andAlso watcher_rot != (watcher_rot_to_tar + 3)%6 andAlso watcher_rot != (watcher_rot_to_tar + 2)%6 andAlso watcher_rot != (watcher_rot_to_tar + 4)%6 then begin
         perception_range = min_perception_range;
      end
         // perception penalty  if target in KO
      if (taget_state BWAND DAM_KNOCKED_DOWN) or (taget_state BWAND DAM_KNOCKED_OUT) or (taget_state BWAND DAM_BLIND) or (taget_state bwand CRITTER_IS_PRONE) then begin
         perception_range = -1;
      end
         // perception penalty if target is blind
      if (taget_state BWAND DAM_BLIND) then begin
         perception_range = watcher_pe * 2;
      end
      orig_dist = round(orig_dist);
      perception_range = round(perception_range);
      if distance < perception_range then begin
         set_sfall_return(1);
      end
      if distance >= perception_range then begin
         set_sfall_return(0);
      end
      // outline for new sneak formula
         distance_objs(distance, watcher, dude_obj);
         watcher_pe = get_critter_stat(watcher,STAT_pe);
         losblock = obj_blocking_line(dude_obj, tile_num(watcher), BLOCKING_TYPE_SHOOT);
         losblock2 = obj_blocking_line(dude_obj, tile_num(watcher), BLOCKING_TYPE_SIGHT);
      if SneakDetection == 1 andAlso using_skill(dude_obj,SKILL_SNEAK) andAlso team != TEAM_PLAYER andAlso not(combat_is_initialized) andAlso distance <= orig_dist andAlso (losblock andAlso (watcher == losblock)  or  Not(losblock2) )  andAlso obj_on_screen(watcher)  then begin
         if distance < orig_dist andAlso distance > orig_dist - (orig_dist - perception_range) + 2 andAlso color != OUTLINE_GREEN_GLOW then begin
            set_outline(watcher, OUTLINE_GREEN_GLOW);
         end
         if distance < orig_dist andAlso distance >= perception_range andAlso distance <= orig_dist - (orig_dist - perception_range) + 2 andAlso color != OUTLINE_YELLOW then begin
            set_outline(watcher, OUTLINE_YELLOW);
         end
         if distance < perception_range then begin
            set_outline(watcher, OUTLINE_RED);
         end
         tile_refresh_display;
      end
   end
   // outline off and refresh
   if SneakDetection == 1 andAlso not(key_pressed(highlight_key)) andAlso (distance >= orig_dist or (losblock2 andAlso losblock andAlso (watcher != losblock)) or not(using_skill(dude_obj,SKILL_SNEAK)))  andAlso not(combat_is_initialized) andAlso watcher != outlined_object andAlso (color == OUTLINE_RED or color == OUTLINE_YELLOW or color == OUTLINE_GREEN_GLOW)   then begin
      set_outline(watcher, OUTLINE_NONE);
      tile_refresh_display;
   end
end

procedure sign_handler begin
   variable  evtp = get_sfall_arg;
   variable watcher = get_sfall_arg;
   variable color = 0;
   variable team = 0;
   if not(key_pressed(highlight_key)) andAlso watcher == dude_obj then begin
      foreach Critter in list_as_array(LIST_CRITTERS) begin
         color = get_outline(Critter);
         team = has_trait(TRAIT_OBJECT, Critter, OBJECT_TEAM_NUM);
         if Critter != outlined_object andAlso (color == OUTLINE_RED or color == OUTLINE_YELLOW or color == OUTLINE_GREEN_GLOW) andAlso team != TEAM_PLAYER then begin
         set_outline(Critter, OUTLINE_NONE);
         tile_refresh_display;
         end
      end
   end
end