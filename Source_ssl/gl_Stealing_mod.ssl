#define SFALL_SC_EVALUATION   (true)  // short - circuit evaluation
#define msg_file "gl_Stealing_mod.msg"
#define msg_cant_steal1 1
#define msg_cant_plant1 2
#define msg_cant_steal2 3
#define msg_cant_plant2 4
#define msg_hands_broken 5
#define msg_witnesses 6
#define msg_weak1 7
#define msg_weak2 8
#define msg_cant_pickpocket 9
#define msg_got_xp 10
#define msg_healed_for 11
#define msg_dead 12
#define modmsg(x) message_str_game(new_steal_msg, x)
#define is_sentient(obj) (get_proto_data(obj_pid(obj), PROTO_CR_BODY_TYPE) == CR_BODY_BIPED andAlso get_critter_stat(obj,STAT_iq) > 3 )
#define NO_STEAL(obj)    (get_proto_data(obj_pid(obj), PROTO_CR_FLAGS) bwand CFLG_NOSTEAL)

#include "E:\Fallout Tools Pack\sFall_Script_Editor\scripts\HEADERS\sfall.h"
#include "E:\Fallout Tools Pack\sFall_Script_Editor\scripts\HEADERS\DEFINE.H"
#include "E:\Fallout Tools Pack\sFall_Script_Editor\scripts\HEADERS\define_extra.h"
#include "E:\Fallout Tools Pack\sFall_Script_Editor\scripts\HEADERS\lib.math.h"
#include "E:\Fallout Tools Pack\sFall_Script_Editor\scripts\HEADERS\lib.strings.h"
#include "E:\Fallout Tools Pack\sFall_Script_Editor\scripts\HEADERS\COMMAND.H"

variable pickpocket_count;
variable last_pickpocket_target;
variable steal_count;
variable right_hand_item;
variable right_hand_item_target;
variable wpn_is_stolen;
variable steal_item_num;
variable is_stealing;
variable StealRebalance;
variable MinStealReq;
variable new_steal_msg;

procedure start;
procedure steal_handler;
procedure steal_skill_use;
procedure game_mode;
procedure rollCheck;
procedure rm_inv;

procedure start begin
   StealRebalance = get_ini_setting ("mods\\F2MechanicsMiniRework.ini|Main|StealRebalance");
   if StealRebalance != 0 andAlso (game_loaded) then begin
   MinStealReq = get_ini_setting ("mods\\F2MechanicsMiniRework.ini|Steal|MinStealReq");
   register_hook_proc_spec(HOOK_STEAL, steal_handler);
   register_hook_proc(HOOK_GAMEMODECHANGE, game_mode);
   register_hook_proc_spec(HOOK_USESKILL, steal_skill_use);
   register_hook_proc_spec(HOOK_ROLLCHECK, rollCheck);
   register_hook_proc_spec(HOOK_REMOVEINVENOBJ, rm_inv);
   set_global_script_type(1);
   set_global_script_repeat(0);
   new_steal_msg = add_extra_msg_file(msg_file);
   end
end

procedure rollCheck begin
   variable roll_type = get_sfall_arg;
   variable roll_result = get_sfall_arg;
   variable roll_chance = get_sfall_arg;
   variable roll_bonus = get_sfall_arg;
   variable rnd_chahce = get_sfall_arg;
   //disabling the 2nd check for successful stealing
   if roll_type == 7 then begin
      set_sfall_return(0);
   end
end

procedure rm_inv begin
   variable rm_owner = get_sfall_arg;
   variable rm_item = get_sfall_arg;
   variable rm_item_num = get_sfall_arg;
   variable rm_reason = get_sfall_arg;
   variable new_owner = get_sfall_arg;
   if is_stealing == 1 andAlso rm_reason == RMOBJ_CONTAINER then begin
   steal_item_num = rm_item_num;
   is_stealing = 0;
   end
end

procedure game_mode begin
   variable game_exit = get_sfall_arg; // int     arg0 - event type: 1 - when the player exits the game, 0 - otherwise
   variable lastgamemode = get_sfall_arg; //  int     arg1 - the previous game mode
   //target equips the weapon if it hasn't been stolen
   if wpn_is_stolen == 2 andAlso lastgamemode == INTFACELOOT then begin
      wield_obj_critter(right_hand_item_target, right_hand_item);
      wpn_is_stolen = 0;
   end
end

procedure steal_handler begin
   variable thief = get_sfall_arg; // Sneak check result: 1 - success, 0 - failure
   variable target = get_sfall_arg; //  the duration in ticks for the current Sneak check (time depends on Sneak skill level)
   variable item = get_sfall_arg; // Item being stolen / planted
   variable stype = get_sfall_arg; // 0 when stealing, 1 when planting
   //int     ret0 - overrides hard-coded handler (1 - force success, 0 - force fail, -1 - use engine handler)
   variable user_steal_skill = has_skill(thief, SKILL_STEAL);
   variable user_sneak_skill = has_skill(thief, SKILL_SNEAK);
   variable target_steal_skill = has_skill(target, SKILL_STEAL);
   variable target_barter_skill = has_skill(target, SKILL_BARTER);
   variable user_steal_skill_mult = 1.50000;
   variable tar_pid = obj_pid(target);
   variable item_pid = obj_pid(item);
   variable item_cost = 0;
   variable target_pe = get_critter_stat(target, STAT_pe);
   variable target_base_pe = get_critter_base_stat(target, STAT_pe);
   variable target_min_pe = 0;
   variable target_pe_mult = 7;
   variable item_size = 0;
   variable item_weight_lvar = 0;
   variable rnd = 0;
   variable chance_to_steal = 0;
   variable pseudo_chance_to_steal = 0;
   variable steal_bonus = 0;
   variable pickpocket = has_trait(TRAIT_PERK, dude_obj, PERK_pickpocket);
   variable night_vision = has_trait(TRAIT_PERK, dude_obj, PERK_night_vision );
   variable harmless = has_trait(TRAIT_PERK, dude_obj, PERK_harmless_perk );
   variable light_level = get_light_level;
   variable target_rot := has_trait(TRAIT_OBJECT, target, OBJECT_CUR_ROT);
   variable target_rot_to_tar := rotation_to_tile(tile_num(target), tile_num(dude_obj));
   variable ally_rot = -6;
   variable ally_rot_to_tar = - 6;
   variable team := has_trait(TRAIT_OBJECT, target, OBJECT_TEAM_NUM);
   variable ally = 0;
   variable ally_team = -1;
   variable ally_pe = 0;
   variable max_steal_chance = 0;
   variable isSuccess = 0;
   variable min_skill_needed = 0;
   variable sneak_bonus = 0;
   variable user_state = critter_state(dude_obj);
   variable taget_state = critter_state(target);
   variable distance;
         // 15-29% penalty to target pe if light lower 50%(or 70% if has night_vision)
   if light_level < 41216 + (night_vision * 21504) then begin
      target_pe_mult = (light_level - (night_vision * 14336)) / 6000;
      if target_pe_mult < 5 then begin
         target_pe_mult = 5;
      end
   end
   // PERK_pickpocket check for add|remove item size, cost and weight penalty
   if pickpocket < 1 then begin
      if StealRebalance == 2 then begin
         item_cost = get_proto_data(item_pid, PROTO_IT_COST);
      end
      item_size = get_proto_data(item_pid, PROTO_IT_SIZE);
      item_weight_lvar = item_weight(item);
   end
   // Stealing weapons from hand.
   if item == right_hand_item andAlso stype == 0 then begin
      right_hand_item_target = target;
      wpn_is_stolen = 1;
      // Penalty for stealing weapons from hand.
      steal_bonus = steal_bonus - 30 - (item_size) - (item_weight_lvar);
   end
      // handler to steal from hands
   if item == right_hand_item andAlso stype == 1 then begin
      right_hand_item_target = target;
      wpn_is_stolen = 2;
   end
      // pe in formula cannot be lower then base_pe - base_pe / 3
   //target_min_pe = target_base_pe - round(target_base_pe / 3.00000);
   //if target_pe < target_min_pe then begin
      //target_pe = target_min_pe;
   //end
      // stealing penalty if target's allies can see the thief
   foreach ally in list_as_array(LIST_CRITTERS) begin
         ally_rot = -6;
         ally_rot_to_tar = -6;
      if ally != dude_obj andAlso ally != target andAlso is_sentient(ally) then begin
            ally_rot = has_trait(TRAIT_OBJECT, ally, OBJECT_CUR_ROT);
            ally_rot_to_tar = rotation_to_tile(tile_num(ally), tile_num(dude_obj));
            ally_team := has_trait(TRAIT_OBJECT, ally, OBJECT_TEAM_NUM);
            distance_objs(distance, ally, dude_obj);
            ally_pe = get_critter_stat(ally, STAT_pe);
         if ally_team == team andAlso distance <= ally_pe*target_pe_mult/4 andAlso (ally_rot == ally_rot_to_tar or ally_rot == (ally_rot_to_tar + 1)%6  or ally_rot == (ally_rot_to_tar + 5)%6)  then begin
               if obj_can_see_obj(ally, dude_obj) then begin
               ally_pe = get_critter_stat(ally, STAT_pe);
               target_pe = target_pe + ally_pe + 2;
            end
         end
      end
   end
      // stealing penalty if target facing the thief
   if target_rot == target_rot_to_tar  then begin
      if pickpocket < 1 then begin
      steal_bonus = steal_bonus - 30;
      end
   end
      // Penalty for theft if the target is sideways to the thief
   if target_rot == (target_rot_to_tar + 1) % 6 or target_rot == (target_rot_to_tar + 5) % 6 then begin
      if pickpocket < 1 then begin
      steal_bonus = steal_bonus - 25;
      end
   end
      // bonus if thief right behind target
   if target_rot == (target_rot_to_tar + 3) % 6 then begin
      steal_bonus = steal_bonus + 5;
   end
      // bonus if target is prone or blind
   if (taget_state BWAND DAM_BLIND) or (taget_state bwand CRITTER_IS_PRONE) then begin
      steal_bonus = steal_bonus + 15;
   end
      // bonus if target is ko
   if (taget_state BWAND DAM_KNOCKED_DOWN) or (taget_state BWAND DAM_KNOCKED_OUT) then begin
      steal_bonus = steal_bonus + 25;
   end
      //steal_bonus if target can't see thief
   if not(obj_can_see_obj(target, dude_obj)) then begin
      steal_bonus = steal_bonus + 15;
   end
      // bonus for sneak_success even if target can see thief
   if  using_skill(dude_obj, SKILL_SNEAK) then begin
      sneak_bonus = user_sneak_skill / 6;
   end
   if sneak_bonus > user_steal_skill / 2 then begin
      sneak_bonus = user_steal_skill / 2;
   end
   steal_bonus = steal_bonus + sneak_bonus;
   rnd = random(1, 100);
      // force SUCCESS on party members
   if team == TEAM_PLAYER then begin
      set_sfall_return(1);
      return;
   end
   if stype == 0 then begin
      is_stealing = 1;
   end
   if stype == 1 then begin
      is_stealing = 0;
      item_cost = 0;
   end
      //it harder to steal from merchants
   if target_barter_skill >= 50 then begin
      steal_bonus = steal_bonus - (target_barter_skill / 3);
   end
      //crippled arms = harder to pickpocket
   if (user_state BWAND DAM_CRIP_ARM_RIGHT) or (user_state BWAND DAM_CRIP_ARM_LEFT) then begin
      steal_bonus =  steal_bonus - 40;
   end
      //chance_to_steal formula
   chance_to_steal = 40 - steal_count + steal_bonus + (user_steal_skill_mult * user_steal_skill) - ((item_size + 1) * 4) - (item_weight_lvar) - (item_cost / (user_steal_skill_mult * user_steal_skill)) - (target_pe * target_pe_mult);
      // calculation of the required skill level
   if StealRebalance == 2 andAlso chance_to_steal < 40 andAlso steal_count == 0 then begin
      pseudo_chance_to_steal = 0;
      steal_bonus = steal_bonus - sneak_bonus;
      while pseudo_chance_to_steal < 40 do begin
      sneak_bonus = 0;
         // bonus for sneak_success even if target can see thief
      if using_skill(dude_obj, SKILL_SNEAK) then begin
         sneak_bonus = user_sneak_skill / 6;
      end
         user_steal_skill = user_steal_skill + 1;
         if sneak_bonus > user_steal_skill / 2 then begin
            sneak_bonus = user_steal_skill / 2;
         end
        pseudo_chance_to_steal = 40 - steal_count + sneak_bonus + steal_bonus + (user_steal_skill_mult * user_steal_skill) - ((item_size + 1) * 4) - (item_weight_lvar) - (item_cost / (user_steal_skill_mult * user_steal_skill)) - (target_pe * target_pe_mult);
      end
      min_skill_needed = user_steal_skill;
   end
   max_steal_chance = (user_steal_skill - 130) / 10;
      if max_steal_chance > 4 then begin
      max_steal_chance = 4;
      end
      //savescum prevent: if the required skill level is reached, first attempt to steal is always successful
   if StealRebalance == 2 andAlso chance_to_steal >= 40 andAlso steal_count == 0 then begin
      chance_to_steal = 100;
   end
      // max stealing chance
   if steal_count > 0 then begin
      if chance_to_steal > 95 + max_steal_chance then begin
      chance_to_steal = 95 + max_steal_chance;
      end
   end
   //savescum prevent: if the required skill level is not reached, attempt to steal is always unsuccessful
   if StealRebalance == 2 andAlso chance_to_steal < 40 andAlso steal_count == 0 then begin
      chance_to_steal = 0;
   end
      //UNsuccessful attempt
   if chance_to_steal < rnd then begin
      set_sfall_return(0);
      steal_item_num = 0;
      isSuccess = 0;
   end
      //Successful attempt
   if chance_to_steal >= rnd then begin
      set_sfall_return(1);
      steal_item_num = 0;
      //penalty for stealing multiple things in a row
      steal_count += 1 + (item_weight_lvar / 4) + ((item_size + 1) * 2);
      isSuccess = 1;
   end
   if team != TEAM_PLAYER then begin
      if StealRebalance == 2 andAlso steal_count == 0 andAlso stype == 0 andAlso isSuccess < 1 then begin
      display_msg(sprintf(mstr_skill(570 + (isSuccess != false) + stype * 2), obj_name(item)) + parse_str_2(modmsg(msg_cant_steal2), min_skill_needed, 0));
      steal_count = 0;
      end
      if StealRebalance == 2 andAlso steal_count == 0 andAlso stype == 1 andAlso isSuccess < 1 then begin
      display_msg(sprintf(mstr_skill(570 + (isSuccess != false) + stype * 2), obj_name(item)) + parse_str_2(modmsg(msg_cant_plant2), min_skill_needed, 0));
      steal_count = 0;
      end
      if StealRebalance == 1 or steal_count > 0 or isSuccess > 0 then begin
      display_msg(sprintf(mstr_skill(570 + (isSuccess != false) + stype * 2), obj_name(item)));
      end
      if StealRebalance == 1 andAlso chance_to_steal < 1 then begin
         if stype == 0 then begin
            display_msg(parse_str_2(modmsg(msg_cant_steal1), obj_name(item), 0));
         end
         if stype == 1 then begin
            display_msg(parse_str_2(modmsg(msg_cant_plant1), obj_name(item), 0));
         end
      end
   end
end

procedure steal_skill_use begin
   variable user = get_sfall_arg;
   variable target = get_sfall_arg;
   variable skill = get_sfall_arg;
   variable skill_bonus = get_sfall_arg;
   variable user_steal_skill = has_skill(user, SKILL_STEAL);
   variable tar_pid = obj_pid(target);
   variable target_pe = get_critter_stat(target, STAT_pe);
   variable target_base_pe = get_critter_base_stat(target, STAT_pe);
   variable target_pe_mult = 7;
   variable target_min_pe = 0;
   variable min_steal_skill = 0;
   variable critter_type = metarule(METARULE_CRITTER_KILL_TYPE, target); // men = 0, women = 1, children = 2, super mutants = 3, ghouls = 4
   variable target_steal_skill = has_skill(target, SKILL_STEAL);
   variable target_barter_skill = has_skill(target, SKILL_BARTER);
   variable user_sneak_skill = has_skill(user, SKILL_SNEAK);
   variable pickpocket = has_trait(TRAIT_PERK, dude_obj, PERK_pickpocket);
   variable night_vision = has_trait(TRAIT_PERK, dude_obj, PERK_night_vision );
   variable harmless = has_trait(TRAIT_PERK, dude_obj, PERK_harmless_perk );
   variable light_level = get_light_level;
   variable target_rot := has_trait(TRAIT_OBJECT, target, OBJECT_CUR_ROT);
   variable target_rot_to_tar := rotation_to_tile(tile_num(target), tile_num(dude_obj));
   variable ally_rot = -6;
   variable ally_rot_to_tar = - 6;
   variable team := has_trait(TRAIT_OBJECT, target, OBJECT_TEAM_NUM);
   variable ally = 0;
   variable ally_team = 0;
   variable ally_pe = 0;
   variable tar_fid = obj_art_fid(target);
   variable tar_int = get_critter_stat(target, STAT_iq);
   variable ally_can_see = 0;
   variable rnd = 0;
   variable user_state = critter_state(dude_obj);
   variable taget_state = critter_state(target);
   variable obj;
   variable color;
   variable distance;
   variable losblock;
   variable losblock2;
   //calculating the minimum skill to get into the target's pocket
   if MinStealReq != 0 andAlso not(NO_STEAL(target)) andAlso skill == SKILL_STEAL andAlso critter_type < 5 andAlso not(team == TEAM_PLAYER) then begin
      steal_count = 0;
      if last_pickpocket_target == target then begin
         pickpocket_count += 1;
      end
      else begin
         pickpocket_count = 0;
      end
      //the ability to steal weapons from hands if the skill is high enough
      if user_steal_skill > 160 + target_pe * 5 then begin
      right_hand_item = critter_inven_obj2(target, INVEN_TYPE_RIGHT_HAND);
      right_hand_item_target = target;
      inven_unwield(target);
      wpn_is_stolen = 2;
      end
      // 15-29% penalty to target pe if light lower 50%(or 70% if has night_vision)
      if light_level < 41216 + (night_vision * 21504) then begin
         target_pe_mult = (light_level - (night_vision * 14336)) / 6000;
         if target_pe_mult < 5 then begin
            target_pe_mult = 5;
         end
      end
      //pe in formula cannot be lower then base_pe - base_pe / 3
      //target_min_pe = target_base_pe - round(target_base_pe / 3.00000);
      //if target_pe < target_min_pe then begin
         //target_pe = target_min_pe;
      //end
         //stealing penalty if target's allies can see the thief
      foreach ally in list_as_array(LIST_CRITTERS) begin
         ally_rot = -6;
         ally_rot_to_tar = -6;
         if ally != dude_obj andAlso ally != target andAlso is_sentient(ally) then begin
            ally_rot = has_trait(TRAIT_OBJECT, ally, OBJECT_CUR_ROT);
            ally_rot_to_tar = rotation_to_tile(tile_num(ally), tile_num(dude_obj));
            ally_team := has_trait(TRAIT_OBJECT, ally, OBJECT_TEAM_NUM);
            distance_objs(distance, ally, dude_obj);
            ally_pe = get_critter_stat(ally, STAT_pe);
            if ally_team == team andAlso distance <= ally_pe*target_pe_mult/4 andAlso (ally_rot == ally_rot_to_tar or ally_rot == (ally_rot_to_tar + 1)%6  or ally_rot == (ally_rot_to_tar + 5)%6)   then begin
               if obj_can_see_obj(ally, dude_obj) then begin
                  float_msg(ally, "?", FLOAT_MSG_YELLOW);
                  target_pe = target_pe + ally_pe;
                  ally_can_see += 1;
               end
            end
         end
      end
      min_steal_skill = (5 + (target_pe * target_pe_mult));
         // stealing penalty if target facing the thief
      if target_rot == target_rot_to_tar  then begin
         min_steal_skill = min_steal_skill + 15;
      end
      if target_rot == (target_rot_to_tar + 1) % 6 or target_rot == (target_rot_to_tar + 5) % 6 then begin
         min_steal_skill = min_steal_skill + 10;
      end
         // stealing bonus if target in KO
      if (taget_state BWAND DAM_KNOCKED_DOWN) or (taget_state BWAND DAM_KNOCKED_OUT) or (taget_state BWAND DAM_BLIND) or (taget_state bwand CRITTER_IS_PRONE) then begin
         min_steal_skill = min_steal_skill - 50;
      end
         // stealing bonus if target is blind
      if (taget_state BWAND DAM_BLIND) then begin
         min_steal_skill = min_steal_skill - 20;
      end
      //making it harder to steal from merchants if MinStealReq == 2
      if MinStealReq == 2 andAlso target_barter_skill >= 50 then begin
         min_steal_skill = min_steal_skill + (target_barter_skill / 4);
      end
      //steal_bonus if critter can't see thief
      if not(obj_can_see_obj(target, dude_obj)) then begin
         min_steal_skill = min_steal_skill - 8 - user_sneak_skill / 3;
      end
      // bonus for sneak_success even if target can see thief
      if obj_can_see_obj(target, dude_obj) andAlso using_skill(dude_obj, SKILL_SNEAK) then begin
         if sneak_success == 1 then begin
            min_steal_skill = min_steal_skill - user_sneak_skill / 10;
         end
         // a little bonus for not sneak_success
         if sneak_success == 0 then begin
            min_steal_skill = min_steal_skill - user_sneak_skill / 10;
         end
      end
         //crippled arm = harder to pickpocket
      if (user_state BWAND DAM_CRIP_ARM_RIGHT) or (user_state BWAND DAM_CRIP_ARM_LEFT) then begin
         min_steal_skill = min_steal_skill * 2;
      end
         //crippled arms = impossible to pickpocket
      if (user_state BWAND DAM_CRIP_ARM_RIGHT) andAlso (user_state BWAND DAM_CRIP_ARM_LEFT) then begin
         set_sfall_return(0);
         display_msg(modmsg(msg_hands_broken));
         return;
      end
         //minimum skill level to open steal interface
      if  user_steal_skill < min_steal_skill then begin
         if ally_can_see != 0 then begin
            display_msg(modmsg(msg_witnesses));
         end
         rnd = random(0 + pickpocket_count, 4 + (2 * pickpocket_count));
         if rnd < 4 andAlso not(combat_is_initialized) andAlso obj_can_see_obj(target, user) andAlso not(critter_state(target) BWAND DAM_KNOCKED_DOWN) andAlso not(critter_state(target) BWAND DAM_KNOCKED_OUT) then begin
            if tar_fid == FID_NACHLD or tar_fid == 16777336 or tar_fid == FID_NMLOSR or tar_fid == FID_NFTRMP then begin
               if rnd < 3 then begin
               float_msg(target, modmsg(msg_weak1), FLOAT_MSG_YELLOW);
               end
               if rnd == 3 or pickpocket_count > 2 then begin
               float_msg(target, modmsg(msg_weak2), FLOAT_MSG_RED);
               end
            end
            if tar_fid != FID_NACHLD andAlso tar_fid != 16777336 andAlso tar_fid != FID_NMLOSR andAlso tar_fid != FID_NFTRMP then begin
               if rnd < 4 andAlso rnd > 0 then begin
               float_msg(target, g_mstr(random(3054, 3064)), FLOAT_COLOR_BAD);
               end
               if rnd < 1 then begin
               float_msg(target, g_mstr(random(3050, 3052)), FLOAT_COLOR_BAD);
               end
            end
      end
      if rnd > (4 + random(0, harmless * 5)) then begin
         set_self(target);
         if tar_fid == FID_NACHLD or tar_fid == 16777336 then begin
            critter_set_flee_state(target, 1);
            set_self(0);
         end
         if tar_fid != FID_NACHLD andAlso tar_fid != 16777336 then begin
            attack(user);
            set_self(0);
         end
         set_self(0);
      end
      set_sfall_return(0);
      display_msg(modmsg(msg_cant_pickpocket) + parse_str_2(modmsg(msg_cant_plant2), min_steal_skill, 0));
      end
      last_pickpocket_target = target;
      //foreach obj in list_as_array(LIST_CRITTERS) begin
      //color = get_outline(obj);
      //team = has_trait(TRAIT_OBJECT, obj, OBJECT_TEAM_NUM);
         //if team != TEAM_PLAYER andAlso color == OUTLINE_RED or color == OUTLINE_YELLOW or color == OUTLINE_GREEN_GLOW then begin
         //set_outline(obj, OUTLINE_NONE);
         //end
      //end
      //tile_refresh_display;
   end
end